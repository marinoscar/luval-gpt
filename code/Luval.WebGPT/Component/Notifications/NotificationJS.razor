@using Luval.Framework.Core.Configuration

<script>
    $(document).ready(function () {
        forceRendering();
    });




    if ('serviceWorker' in navigator) {
        window.addEventListener("load", () => {
            navigator.serviceWorker.register("/ServiceWorker.js")
                .then((reg) => {

                    console.log("Permission:" + Notification.permission);
                    localStorage.setItem('notPerm', Notification.permission);


                    if (Notification.permission === "granted") {

                        console.log("Granted");
                        $("#form").show();
                        getSubscription(reg);

                    } else if (Notification.permission === "blocked") {

                        console.log("Not supported");
                        $("#NoSupport").show();

                    } else {

                        console.log("Request");

                        $("#GiveAccess").show();
                        

                    }
                });
        });
    } else {
        $("#NoSupport").show();
    }



    function requestNotificationAccess() {

        Notification.requestPermission(function (status) {

            $("#GiveAccess").hide();

            if (status == "granted") {

                $("#form").show();
                getSubscription(reg);

            } else {

                $("#NoSupport").show();
            }

        });
    }

    function getSubscription(reg) {

        reg.pushManager.getSubscription().then(function (sub) {

            console.log("Sub is: " + sub)

            if (sub === null) {

                console.log("Creating a new Sub");

                reg.pushManager.subscribe(
                    {
                        userVisibleOnly: true,
                        applicationServerKey: "@ConfigManager.Get("VAPIKey")"
                    }).then(function (sub) {

                        fillSubscribeFields(sub);
                    }).catch(function (e) {
                        console.error("Unable to subscribe to push", e);
                    });
            } else {

                console.log("Updating sub details");
                fillSubscribeFields(sub);
            }
        });

    }

    function fillSubscribeFields(sub) {

        console.log("Sub Endpoint: " + sub.endpoint);

        localStorage.setItem('vapid', 'true');
        localStorage.setItem('endpoint', sub.endpoint);
        localStorage.setItem('p256dh', arrayBufferToBase64(sub.getKey("p256dh")));
        localStorage.setItem('auth', arrayBufferToBase64(sub.getKey("auth")));

        $("#endpoint").val(sub.endpoint);
        $("#p256dh").val(arrayBufferToBase64(sub.getKey("p256dh")));
        $("#auth").val(arrayBufferToBase64(sub.getKey("auth")));
    }

    function arrayBufferToBase64(buffer) {
        var binary = '';
        var bytes = new Uint8Array(buffer);
        var len = bytes.byteLength;
        for (var i = 0; i < len; i++) {
            binary += String.fromCharCode(bytes[i]);
        }
        return window.btoa(binary);
    }

    function returnVAPIInfo() {
        return {
            "Auth": localStorage.getItem('auth'),
            "P256DH": localStorage.getItem('p256dh'),
            "Endpoint": localStorage.getItem('endpoint')
        }
    }

    function forceRefresh() {
        location.reload(true);
    }


    function forceRendering() {
        forceSubRendering();
        forceGiveRendering();
    }

    function forceSubRendering() {


        if (!$('#form').is(':visible') && localStorage.getItem('notPerm') === 'granted') {

            setTimeout(function () {
                console.log('SUB FORCE SHOW');
                $('#form').show();
            }, 500);

        }
        else{
            console.log('SUB VISIBLE');
        }
    }

    function forceGiveRendering() {


        if (!$('#GiveAccess').is(':visible') && localStorage.getItem('notPerm') === 'default') {

            setTimeout(function () {
                console.log('SUB FORCE SHOW');
                $('#GiveAccess').show();
            }, 500);

        }
        else {
            console.log('SUB VISIBLE');
        }
    }




</script>
